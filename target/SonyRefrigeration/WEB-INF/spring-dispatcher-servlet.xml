<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
    <!-- <context:annotation-config /> 	 -->
   <context:component-scan base-package="com.sony.refrigeration.b2c" />
   <mvc:annotation-driven />
   <mvc:resources mapping="/**" location="/" />
  
	  <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	  	<property name="prefix">
	  		<value>/WEB-INF/</value>
	  	</property>
	  	<property name="suffix">
	  		<value>.jsp</value>
	  	</property>
	  </bean>
  
<!--   <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/> -->
  
      <!-- This resolves messages from resource bundles for different locales -->
      <bean id="A" class="com.sony.refrigeration.b2c.beans.TestBean">
      	<property name="name" value="Indrajeet"></property>
      </bean>
      <bean id="B" class="com.sony.refrigeration.b2c.beans.TestBean">
      	<property name="name" value="Amit"></property>
      </bean>
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages" />
    </bean>
     
    <!-- To validate the posted add employee form -->
<!--     <bean id="employeeValidator" class="com.howtodoinjava.demo.validator.EmployeeValidator" /> -->
     
    <!-- This produces a container-managed EntityManagerFactory; 
         rather than application-managed EntityManagerFactory as in case of LocalEntityManagerFactoryBean-->
   <bean id="entityManagerFactoryBean" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="packagesToScan" value="com.sony.refrigeration.b2c.persistance" />
      <property name="jpaVendorAdapter">
         <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
      </property>
      <property name="jpaProperties">
         <props>
            <prop key="hibernate.hbm2ddl.auto">update</prop>
            <!-- <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop> -->
            <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
         </props>
      </property>
   </bean> 
   
  <!--  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
      <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
      <property name="username" value="BALOSX1" />
      <property name="password" value="LSDIKX1df4UU" />
   </bean>  -->
  
   <!-- Simple implementation of the standard JDBC DataSource interface, 
        configuring the plain old JDBC DriverManager via bean properties -->
   <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName" value="com.mysql.jdbc.Driver" />
      <!-- Local -->
      <!-- <property name="url" value="jdbc:mysql://localhost:3306/sony" />
      <property name="username" value="root" />
      <property name="password" value="pa$$w0rd" /> -->
      
      <!-- Production -->
      <property name="url" value="jdbc:mysql://mysql.cnnzz9iszw4r.ap-south-1.rds.amazonaws.com:3306/sony?useSSL=false" />
      <property name="username" value="root" />
      <property name="password" value="pa$$w0rd" />
   </bean>
     
    <!-- This transaction manager is appropriate for applications that use a single JPA EntityManagerFactory for transactional data access. 
        JTA (usually through JtaTransactionManager) is necessary for accessing multiple transactional resources within the same transaction. -->
   <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      <property name="entityManagerFactory" ref="entityManagerFactoryBean" />
   </bean>
   
    <!-- SET default mail properties -->
    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com"/>
        <property name="port" value="587"/>
        <property name="username" value="sony.refrigeration.bokaro@gmail.com"/>
        <property name="password" value="pa$$w0rd@123"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
            </props>
        </property>
    </bean>
     
    <!-- You can have some pre-configured messagess also which are ready to send -->
    <bean id="preConfiguredMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="to" value="indrajeet.kr.sharma@gmail.com"></property>
        <property name="from" value="sony.refrigeration.bokaro@gmail.com"></property>
        <property name="subject" value="FATAL - Application crash. Save your job !!"/>
    </bean>
    
    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
	  <property name="velocityProperties">
		 <value>
		  resource.loader=class
		  class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
		 </value>
	  </property>
	</bean>
   
   <tx:annotation-driven />
</beans>